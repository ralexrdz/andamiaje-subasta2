{"version":3,"sources":["components/Participants.js","components/Transactions.js","components/Bidder.js","components/Auction.js","App.js","serviceWorker.js","index.js"],"names":["Participants","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Pusher","logToConsole","cluster","forceTLS","subscribe","bind","data","console","log","list","document","getElementById","innerHTML","participants","forEach","participant","concat","react_default","a","createElement","id","Component","Activity","amount","Bidder","who","parseInt","value","axios","post","name","then","htmlFor","type","onClick","bid","Auction","state","showAuction","highestBid","me","winner","setState","delete","src_components_Participants","leaveAuction","components_Transactions","src_components_Bidder","placeholder","joinAuction","App","className","src_components_Auction","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26da7668.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Pusher from 'pusher-js'\n\nimport './Participants.css';\n\n\nclass Participants extends Component {\n  constructor (props) {\n    super(props)\n    Pusher.logToConsole = true;\n\n    var pusher = new Pusher('a8ee0fa5cc66b88f3a48', {\n      cluster: 'us2',\n      forceTLS: true\n    });\n      \n    var channel = pusher.subscribe('my-channel');\n    channel.bind('participants-updated', function(data) {\n      console.log(data)\n      let list = document.getElementById('participants')\n      if (list) {\n        console.log(list)\n        list.innerHTML = ''\n        data.participants.forEach(participant => {\n          console.log(participant)\n          list.innerHTML += `<div>${participant}</div>`\n        });\n      }\n    });\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h1>Participantes </h1>\n        <div id=\"participants\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Participants\n","import React, { Component } from 'react'\nimport Pusher from 'pusher-js'\n\nimport './Transactions.css';\n\n\nclass Activity extends Component {\n  constructor (props) {\n    super(props)\n    Pusher.logToConsole = true;\n\n    var pusher = new Pusher('a8ee0fa5cc66b88f3a48', {\n      cluster: 'us2',\n      forceTLS: true\n    });\n      \n    var channel = pusher.subscribe('my-channel');\n    channel.bind('new-bid', function(data) {\n      console.log(data)\n      let list = document.getElementById('transactions')\n      list.innerHTML += `<div>${data.participant} - ${data.amount}</div>`\n    });\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h1>Activity</h1>\n        <div id=\"transactions\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Activity\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport './Bidder.css';\n\n\nclass Bidder extends Component {\n  constructor (props) {\n    super(props)\n  }\n  bid () {\n    console.log(this.props)\n    let who = this.props.who\n    let amount = parseInt(document.getElementById('bid').value)\n    axios.post('https://pusher-node-auction--ralexrdz.repl.co/bids', {\n      name: who,\n      amount: amount\n    })\n    .then( function (data) {\n      console.log(data)\n      console.log(`${who} bids ${amount}` )\n    })\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h1>Bidder</h1>\n        <div>\n          <label htmlFor=\"bid\">Cantidad: </label><input type=\"number\" id=\"bid\"/>\n          <button onClick={this.bid.bind(this)}>Pujar</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Bidder\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport './Auction.css';\n\nimport Participants from './Participants'\nimport Transactions from './Transactions'\nimport Bidder from './Bidder'\nimport Pusher from 'pusher-js'\n\nclass Auction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAuction: false,\n      highestBid: 0,\n      me: null\n    };\n    Pusher.logToConsole = true;\n\n    var pusher = new Pusher('a8ee0fa5cc66b88f3a48', {\n      cluster: 'us2',\n      forceTLS: true\n    });\n      \n    var channel = pusher.subscribe('my-channel');\n    channel.bind('auction-ended', function(data) {\n      document.getElementById('winner').innerHTML = `GANADOR: ${data.winner}`\n    });\n  }\n  joinAuction () {\n    let name = document.getElementById('name').value\n    this.setState({\n      showAuction: true,\n      me: name\n    })\n    axios.post('https://pusher-node-auction--ralexrdz.repl.co/participants', {\n      participant: name\n    }).then((data) => {\n      console.log()\n      console.log('participant posted')\n    })\n  }\n  leaveAuction () {\n    let me = this.state.me \n    this.setState({\n      showAuction: false,\n      me: null\n    })\n    axios.delete(`https://pusher-node-auction--ralexrdz.repl.co/participants/${me}`)\n    .then((data) => {\n      console.log('bye')\n    })\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h2 id=\"winner\"> </h2>\n        <h1>Auction</h1>\n        { this.state.showAuction ?\n          (\n            <div>\n              <h3>La puja m√°s alta es de: <b>{this.state.highestBid}</b></h3>\n              <Participants/>\n              <div>\n                <button onClick={this.leaveAuction.bind(this)}>Abandonar</button>\n              </div>\n              <Transactions/>\n              <Bidder who={this.state.me}/>\n            </div>\n          ) : (\n            <div>\n              <input id=\"name\" type=\"text\" placeholder=\"Nombre\"/>\n              <button onClick={this.joinAuction.bind(this)}>Participar</button>\n              <h2>Escribe tu nombre y da click en participar para unirte a la subasta</h2>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default Auction\n","import React, { Component } from 'react';\nimport './App.css';\nimport Auction from './components/Auction'\n\nclass App extends Component {\n  // componentDidMount() {\n  //   console.log('adding event listener for before unload')\n  //   window.addEventListener('beforeunload', this.handleLeavePage);\n  // }\n  \n  // componentWillUnmount() {\n  //   console.log('removing event listener for before unload')\n  //   window.removeEventListener('beforeunload', this.handleLeavePage);\n  // }\n  \n  // handleLeavePage(e) {\n  //   console.log('asking')\n  //   // remove user from connected\n  //   const confirmationMessage = 'Quieres abandonar la subasta?';\n  //   e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+\n  //   return confirmationMessage;              // Gecko, WebKit, Chrome <34\n  // }\n  render() {\n    return (\n      <div className=\"App\">\n        <Auction/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}